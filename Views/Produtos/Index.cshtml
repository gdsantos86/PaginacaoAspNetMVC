@model X.PagedList.IPagedList<PaginacaoAspNetMVC.Models.Produto>
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Fluent;


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.Preco)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.Categoria)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categoria.Nome)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProdutoId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProdutoId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProdutoId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@*Paginação de dados*@
<table>
    <tr>
        <td>
            @(Html.Pager(Model)
                .Url(pagina => Url.Action("Index", new { pagina }))
                .DisplayLinkToFirstPage(PagedListDisplayMode.IfNeeded)
                .DisplayLinkToLastPage(PagedListDisplayMode.IfNeeded)
                .DisplayLinkToPreviousPage()
                .DisplayLinkToNextPage()
                .MaximumPageNumbersToDisplay(4)
                .Build()
                )
        </td>
        <td>
            @if (Model.HasPreviousPage)
            {
                @if (Model.HasNextPage)
                {
                    <span>Mostrando os itens @((Model.PageNumber - 1) * Model.PageSize + 1) a @(Model.PageNumber * Model.PageSize) de @Model.TotalItemCount.</span>
                }
                else
                {
                    <span>Mostrando os itens @((Model.PageNumber - 1) * Model.PageSize + 1) a @Model.TotalItemCount de @Model.TotalItemCount.</span>
                }
            }
            else
            {
                <span>Mostrando os itens 1 a @Math.Min(Model.PageSize, Model.TotalItemCount) de @Model.TotalItemCount.</span>
            }
        </td>
    </tr>
</table>

